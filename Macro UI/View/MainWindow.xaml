<Controls:MetroWindow x:Class="Macro_UI.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Macro_UI"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:ext="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:dock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:dockctrl="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
        xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock"
        xmlns:avalonDockConverters="clr-namespace:Xceed.Wpf.AvalonDock.Converters;assembly=Xceed.Wpf.AvalonDock"
        xmlns:viewModels="clr-namespace:Macro_UI.ViewModel"
        xmlns:views="clr-namespace:Macro_UI.View"
        xmlns:utils="clr-namespace:Macro_UI.Utilities"
        xmlns:properties="clr-namespace:Macro_UI.Properties"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:utilities="clr-namespace:Macro_UI.Utilities"
        mc:Ignorable="d" Dialog:DialogParticipation.Register="{Binding}"
        Title="Macro Editor" TitleCaps="False" HorizontalAlignment="Center" VerticalAlignment="Center" ShowIconOnTitleBar="False"
        MinWidth="1024" MinHeight="576" BorderBrush="Black" BorderThickness="0" GlowBrush="Black" ResizeMode="CanResizeWithGrip"
        LeftWindowCommandsOverlayBehavior="Always" RightWindowCommandsOverlayBehavior="Always" WindowButtonCommandsOverlayBehavior="Always"
        Background="{DynamicResource WindowBackgroundBrush}"
        WindowState="{Binding Source={x:Static properties:Settings.Default}, Path=WindowState, Mode=TwoWay}"
        Width="{Binding Source={x:Static properties:Settings.Default}, Path=WindowWidth, Mode=TwoWay}"
        Height="{Binding Source={x:Static properties:Settings.Default}, Path=WindowHeight, Mode=TwoWay}"
        Top="{Binding Source={x:Static properties:Settings.Default}, Path=WindowTop, Mode=TwoWay}"
        Left="{Binding Source={x:Static properties:Settings.Default}, Path=WindowLeft, Mode=TwoWay}">
    
    <!-- Import Resource Dictionary -->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Name="ControlsDictionary">
                    <ResourceDictionary.MergedDictionaries>
                        <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                        <!-- Accent -->
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/Excel Macros UI;component/Themes/ExcelAccent.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
                <ResourceDictionary x:Name="ThemeDictionary">
                    <ResourceDictionary.MergedDictionaries>
                        <!--AppTheme setting -->
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
                <ResourceDictionary>
                    <dock:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

                    <Style x:Key="HeaderMenuItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
                    </Style>

                    <Style x:Key="MetroMenuItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Style>

                    <Style x:Key="MetroContextMenuStyle" TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource MetroContextMenu}">
                        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
                    </Style>

                    <Style x:Key="MertoMenuSeparatorStyle" TargetType="{x:Type Separator}">
                        <Setter Property="Margin" Value="0,0,12,0"/>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <views:SettingsMenuView DataContext="{Binding SettingsMenu}" IsOpen="{Binding IsOpen}"/>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>

    <DockPanel Background="{DynamicResource WindowBackgroundBrush}">
        <Menu DockPanel.Dock="Top" Background="{DynamicResource WindowBackgroundBrush}">
            <MenuItem Header="_File" Style="{DynamicResource HeaderMenuItemStyle}">
                <MenuItem Header="_New" Command="{Binding NewClick}"/>
                <MenuItem Header="_Open" Command="{Binding OpenClick}"/>
                <Separator />
                <MenuItem Header="_Save" Command="{Binding SaveClick}"/>
                <MenuItem Header="Save All" Command="{Binding SaveAllClick}"/>
                <MenuItem Header="Export" Command="{Binding ExportClick}"/>
                <Separator />
                <MenuItem Header="_Exit" Command="{Binding ExitClick}"/>
            </MenuItem>
            <MenuItem Header="_Edit" Style="{DynamicResource HeaderMenuItemStyle}">
                <MenuItem Header="_Undo" Command="{Binding UndoClick}"/>
                <MenuItem Header="_Redo" Command="{Binding RedoClick}"/>
                <Separator />
                <MenuItem Header="_Copy" Command="{Binding CopyClick}"/>
                <MenuItem Header="Cut" Command="{Binding CutClick}"/>
                <MenuItem Header="_Paste" Command="{Binding PasteClick}" />
            </MenuItem>
            <MenuItem Header="_View" Style="{DynamicResource HeaderMenuItemStyle}">
                <MenuItem Header="_Explorer" Command="{Binding EditorClick}"/>
                <MenuItem Header="_Console" Command="{Binding ConsoleClick}"/>
            </MenuItem>
            <MenuItem Header="_Tools" Style="{DynamicResource HeaderMenuItemStyle}">
                <MenuItem Header="_Style" Command="{Binding StyleClick}"/>
                <MenuItem Header="_Libraries" Command="{Binding LibraryClick}"/>
                <MenuItem Header="_Macros" Command="{Binding MacroClick}"/>
                <Separator />
                <MenuItem Header="_Options" Command="{Binding StyleClick}"/>
            </MenuItem>
        </Menu>

        <Grid DockPanel.Dock="Bottom">
            <Grid.RowDefinitions>
                <RowDefinition Height="0" MinHeight="0" MaxHeight="0" />
                <RowDefinition Height="28" MinHeight="28" MaxHeight="28" />
                <RowDefinition Height="2" MinHeight="2" MaxHeight="2" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="1">

                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{DynamicResource WindowBackgroundBrush}">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="10,0,0,0">
                        <Button Command="{Binding NewClick}" Padding="2,2,2,2" BorderThickness="0" ToolTip="New Project" Margin="0,0,0,2" VerticalAlignment="Stretch" HorizontalAlignment="Left" Background="Transparent">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid x:Name="ContentGrid" Margin="0,0,0,0">
                                        <Rectangle Width="16" Height="16" Fill="#a09e9a" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,0,4,0">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{iconPacks:Material {x:Static iconPacks:PackIconMaterialKind.FileMultiple}}"/>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#44808080" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#55808080" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Button Command="{Binding OpenClick}" Padding="2,2,2,2" BorderThickness="0" Margin="28,0,0,0" ToolTip="Open Project" VerticalAlignment="Stretch" HorizontalAlignment="Left" Background="Transparent">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid x:Name="ContentGrid" Margin="0,0,0,0">
                                        <Rectangle Width="16" Height="16" Fill="#e0c282" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,0,4,0">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{iconPacks:Entypo {x:Static iconPacks:PackIconEntypoKind.Folder}}"/>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#44808080" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#55808080" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Button Command="{Binding SaveClick}" Padding="2,2,2,2" BorderThickness="0" Margin="56,0,0,0" ToolTip="Save" VerticalAlignment="Stretch" HorizontalAlignment="Left" Background="Transparent">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid x:Name="ContentGrid" Margin="0,0,0,0">
                                        <Rectangle Width="16" Height="16" Fill="#2980b9" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,0,4,0">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{iconPacks:Material {x:Static iconPacks:PackIconMaterialKind.ContentSave}}"/>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#44808080" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#55808080" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Button Command="{Binding SaveAllClick}" Padding="2,2,2,2" BorderThickness="0" Margin="84,0,0,0" ToolTip="Save All" VerticalAlignment="Stretch" HorizontalAlignment="Left" Background="Transparent">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid x:Name="ContentGrid" Margin="0,0,0,0">
                                        <Rectangle Width="16" Height="16" Fill="#2980b9" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,0,4,0">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{iconPacks:Material {x:Static iconPacks:PackIconMaterialKind.ContentSaveAll}}"/>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#44808080" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#55808080" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>

                    <Rectangle Width="1" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="120,4,0,4" Fill="{DynamicResource GrayBrush8}" />

                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="124,0,0,0">
                        <Button Command="{Binding UndoClick}" Padding="2,2,2,2" BorderThickness="0" Margin="0,0,0,0" ToolTip="Undo" VerticalAlignment="Stretch" HorizontalAlignment="Left" Background="Transparent">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid x:Name="ContentGrid" Margin="0,0,0,0">
                                        <Rectangle Width="16" Height="16" Fill="#2980b9" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,0,4,0">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{iconPacks:Modern {x:Static iconPacks:PackIconModernKind.Undo}}"/>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#44808080" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#55808080" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Button Command="{Binding RedoClick}" Padding="2,2,2,2" BorderThickness="0" Margin="28,0,0,0" ToolTip="Redo" VerticalAlignment="Stretch" HorizontalAlignment="Left" Background="Transparent">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid x:Name="ContentGrid" Margin="0,0,0,0">
                                        <Rectangle Width="16" Height="16" Fill="#2980b9" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,0,4,0">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{iconPacks:Modern {x:Static iconPacks:PackIconModernKind.Redo}}"/>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#44808080" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#55808080" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                    
                    <Rectangle Width="1" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="178,4,0,4" Fill="{DynamicResource GrayBrush8}" />

                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="182,0,0,0">
                        <ComboBox IsEditable="True" IsTextSearchEnabled="True" IsTextSearchCaseSensitive="True" SelectedIndex="{Binding Source={x:Static properties:Settings.Default}, Path=ExecutionTypeIndex, Mode=TwoWay}" HorizontalAlignment="Left" Width="112" Height="16">
                            <ComboBox.Items>
                                <ComboBoxItem ToolTip="Slowest execution that can be terminated.">Debug</ComboBoxItem> <!-- Asynchronous -->
                                <ComboBoxItem ToolTip="Fastest execution which cannot be terminated.">Release</ComboBoxItem> <!-- Synchronous -->
                            </ComboBox.Items>
                        </ComboBox>

                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="116,0,0,0">
                            <Button Command="{Binding RunClick}" Visibility="{Binding IsEditing, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}}" IsEnabled="{Binding IsEditing}" Padding="2,2,2,2" BorderThickness="0" ToolTip="Start" Margin="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Left" Background="Transparent">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid x:Name="ContentGrid" Margin="0,0,0,0">
                                            <TextBlock VerticalAlignment="Center" Background="Transparent" Foreground="{DynamicResource TextBrush}" HorizontalAlignment="Right" Margin="24,0,6,0" FontSize="14" FontWeight="Regular">Start</TextBlock>
                                            <Rectangle Width="16" Height="16" Fill="#1e8449" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,0,4,0">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{iconPacks:Entypo {x:Static iconPacks:PackIconEntypoKind.ControllerPlay}}"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="ContentGrid" Property="Background" Value="#44808080" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter TargetName="ContentGrid" Property="Background" Value="#55808080" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>

                            <Button Command="{Binding StopClick}" Visibility="{Binding IsExecuting, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}}" IsEnabled="{Binding IsExecuting}" Padding="2,2,2,2" ToolTip="Stop" BorderThickness="0" Margin="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Left" Background="Transparent">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid x:Name="ContentGrid" Margin="0,0,0,0">
                                            <TextBlock VerticalAlignment="Center" Background="Transparent" Foreground="{DynamicResource TextBrush}" HorizontalAlignment="Right" Margin="24,0,6,0" FontSize="14" FontWeight="Regular">Stop</TextBlock>
                                            <Rectangle Width="16" Height="16" Fill="#a1260d" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,0,4,0">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{iconPacks:Entypo {x:Static iconPacks:PackIconEntypoKind.ControllerStop}}"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="ContentGrid" Property="Background" Value="#44808080" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter TargetName="ContentGrid" Property="Background" Value="#55808080" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Grid>
                    </Grid>

                    <Rectangle Width="1" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="358,4,0,4" Fill="{DynamicResource GrayBrush8}"  Visibility="{Binding IsVisual, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}}" />

                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="362,0,0,0">
                        <!-- Convert Python -->
                        <Button Command="{Binding ConvertCommand}" Visibility="{Binding IsVisual, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}}" Padding="2,2,2,2" BorderThickness="0" ToolTip="Convert To New Python Macro" Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Background="Transparent">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid x:Name="ContentGrid" Margin="0,0,0,0">
                                        <Image Width="16" Height="16" Source="pack://application:,,,/Excel Macros UI;component/Resources/ConvertPython.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4,0,4,0" Stretch="Uniform" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#44808080" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="ContentGrid" Property="Background" Value="#55808080" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                </Grid>
            </Grid>

            <dock:DockingManager x:Name="DockingManager_DockManager" Grid.Row="3" Padding="0" DataContext="{Binding DockManager}" ActiveContent="{Binding ActiveContent, Mode=TwoWay}"  Background="{DynamicResource WindowBackgroundBrush}" DocumentsSource="{Binding Documents, Mode=OneWay}" AnchorablesSource="{Binding Tools, Mode=OneWay}"
                             VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Loaded="DockManagerLoaded" Unloaded="DockManagerUnloaded" >

                <dock:DockingManager.Resources>
                    <DataTemplate DataType="{x:Type viewModels:ExplorerViewModel}">
                        <views:ExplorerView DataContext="{Binding}"/>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type viewModels:ConsoleViewModel}">
                        <views:ConsoleView DataContext="{Binding}"/>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type viewModels:TextualEditorViewModel}">
                        <views:TextualEditorView DataContext="{Binding}"/>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type viewModels:VisualEditorViewModel}">
                        <views:VisualEditorView DataContext="{Binding}"/>
                    </DataTemplate>
                </dock:DockingManager.Resources>

                <!--<dock:DockingManager.LayoutItemTemplate>
                    <DataTemplate>
                        <ContentPresenter Content="{Binding View, UpdateSourceTrigger=PropertyChanged}" />
                    </DataTemplate>
                </dock:DockingManager.LayoutItemTemplate>-->

                <dock:DockingManager.LayoutItemContainerStyleSelector>
                    <utils:PaneStyleSelector>
                        <utils:PaneStyleSelector.DocumentStyle>
                            <Style TargetType="{x:Type dockctrl:LayoutItem}">
                                <Setter Property="Title" Value="{Binding Model.Title}" />
                                <Setter Property="ToolTip" Value="{Binding Model.ToolTip}" />
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                                <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
                                <Setter Property="CanFloat" Value="{Binding Model.CanFloat}" />
                            </Style>
                        </utils:PaneStyleSelector.DocumentStyle>
                        <utils:PaneStyleSelector.ToolStyle>
                            <Style TargetType="{x:Type dockctrl:LayoutAnchorableItem}">
                                <Setter Property="Title" Value="{Binding Model.Title}" />
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                                <Setter Property="CanFloat" Value="{Binding Model.CanFloat}" />
                                <Setter Property="Visibility" Value="{Binding Model.IsVisible, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}}" />
                                <Setter Property="CanHide" Value="true"/>
                                <Setter Property="CanClose" Value="false" />
                            </Style>
                        </utils:PaneStyleSelector.ToolStyle>
                    </utils:PaneStyleSelector>
                </dock:DockingManager.LayoutItemContainerStyleSelector>

                <dock:LayoutRoot>
                    <dock:LayoutPanel x:Name="lpVerticalPanel" Orientation="Vertical">
                        <dock:LayoutPanel x:Name="lpHorizontalPanel" Orientation="Horizontal">
                            <dock:LayoutDocumentPane />
                        </dock:LayoutPanel>
                    </dock:LayoutPanel>
                </dock:LayoutRoot>
            </dock:DockingManager>
        </Grid>
    </DockPanel>
</Controls:MetroWindow>
