<Controls:Flyout x:Class="Macro_UI.View.SettingsMenuView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Macro_UI.View"
             xmlns:properties="clr-namespace:Macro_UI.Properties"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:model="clr-namespace:Macro_UI.Model"
             xmlns:viewmodel="clr-namespace:Macro_UI.ViewModel"
             xmlns:dock="clr-namespace:AvalonDock;assembly=AvalonDock"
             xmlns:dockCtrl="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
             xmlns:dockLay="clr-namespace:AvalonDock.Layout;assembly=AvalonDock"
             xmlns:dockProp="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
             xmlns:dockConv="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:ext="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="384" Header="Settings" Background="{DynamicResource ControlBackgroundBrush}" Position="Right" Width="384" Theme="Adapt" BorderThickness="1,0,0,0" BorderBrush="{DynamicResource GrayBrush10}">

    <Controls:Flyout.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Name="ControlsDictionary">
                    <ResourceDictionary.MergedDictionaries>
                        <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                        <!-- Accent -->
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Steel.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
                <ResourceDictionary x:Name="ThemeDictionary">
                    <ResourceDictionary.MergedDictionaries>
                        <!-- AppTheme setting -->
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Steel.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
                <ResourceDictionary>
                    <Style x:Key="MCBDDTBStyle" TargetType="{x:Type ToggleButton}">
                        <Setter Property="ClickMode" Value="Press" />
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border BorderBrush="{DynamicResource TextBoxBorderBrush}" BorderThickness="{DynamicResource ComboBoxBorderThemeThickness}">
                                        <Grid x:Name="ToggleButtonRootGrid" Background="{DynamicResource ControlBackgroundBrush}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                                                <ColumnDefinition x:Name="ToggleButtonColumn" Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <Button x:Name="PART_ClearText"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Focusable="False"
                                FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}"
                                FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsTabStop="False"
                                Style="{DynamicResource ChromelessButtonStyle}"
                                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}, Path=(Controls:TextBoxHelper.ClearTextButton), Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            <Grid x:Name="BtnArrowBackground"
                              Grid.Column="2"
                              Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}"
                              Background="Transparent">
                                                <Path x:Name="BtnArrow" 
                                  Width="8"
                                  Height="4"
                                  HorizontalAlignment="Center"
                                  Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                  Fill="{DynamicResource GrayBrush1}"
                                  IsHitTestVisible="false"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  Stretch="Uniform" />
                                            </Grid>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger SourceName="BtnArrowBackground" Property="IsMouseOver" Value="True">
                                            <Setter TargetName="BtnArrowBackground" Property="Background" Value="{DynamicResource GrayBrush5}" />
                                        </Trigger>
                                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource GrayBrush8}" />
                                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True">
                                            <Setter TargetName="BtnArrowBackground" Property="Background" Value="{DynamicResource GrayBrush3}" />
                                            <Setter TargetName="ToggleButtonRootGrid" Property="Background" Value="{DynamicResource GrayBrush7}" />
                                        </DataTrigger>
                                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource BlackBrush}" />
                                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                                            <Setter TargetName="ToggleButtonRootGrid" Property="Background" Value="{DynamicResource GrayBrush7}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="SettingsButtonStyle" TargetType="ToggleButton">
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="MinHeight" Value="29px" />
                        <Setter Property="MinWidth"  Value="103px" />
                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid x:Name="Grid" Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="Column" Width="0"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Rectangle x:Name="Rectangle" Fill="Transparent" Grid.Column="0" Margin="0,8,0,8" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

                                        <Border x:Name="Border" Grid.Column="1" TextBlock.Foreground="{DynamicResource TextBrush}" Background="Transparent">
                                            <ContentPresenter Margin="12,2,12,2" HorizontalAlignment="Left" VerticalAlignment="Center" RecognizesAccessKey="True" />
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Grid" Property="Background" Value="#22808080"/>
                                            <Setter TargetName="Column" Property="Width" Value="1"/>
                                            <Setter TargetName="Rectangle" Property="Fill" Value="{StaticResource AccentColorBrush3}"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="Grid" Property="Background" Value="#44808080"/>
                                            <Setter TargetName="Column" Property="Width" Value="2"/>
                                            <Setter TargetName="Rectangle" Property="Fill" Value="{StaticResource AccentColorBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <dockConv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        </ResourceDictionary>
    </Controls:Flyout.Resources>

    <Grid x:Name="FlyoutContent" Margin="0,0,0,0">
        <Grid.Resources>
            <ResourceDictionary x:Name="GridThemeDictionary">
                <ResourceDictionary.MergedDictionaries>
                    <!-- AppTheme setting -->
                    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Steel.xaml" />
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="112" Width="112" MaxWidth="112"/>
            <ColumnDefinition MinWidth="1" Width="1" MaxWidth="1"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid FlowDirection="LeftToRight" Grid.Column="0" Background="{DynamicResource ControlBackgroundBrush}">
            <!-- TABS -->
            <ToggleButton IsChecked="{Binding StyleActive, Mode=TwoWay}" Margin="0,8,0,0" Height="40" VerticalAlignment="Top" HorizontalAlignment="Stretch" Style="{StaticResource SettingsButtonStyle}">
                <Grid Margin="0,0,0,0">
                    <TextBlock VerticalAlignment="Center" Background="Transparent" Foreground="{DynamicResource TextBrush}" HorizontalAlignment="Left" Margin="24,0,0,2">Style</TextBlock>
                    <Rectangle Width="16" Height="16" Fill="{DynamicResource TextBrush}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,0,0">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{iconPacks:Material {x:Static iconPacks:PackIconMaterialKind.CodeBraces}}"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Grid>
            </ToggleButton>

            <ToggleButton IsChecked="{Binding LibraryActive, Mode=TwoWay}" Margin="0,48,0,0" Height="40" VerticalAlignment="Top" HorizontalAlignment="Stretch" Style="{StaticResource SettingsButtonStyle}">
                <Grid Margin="0,0,0,0">
                    <TextBlock VerticalAlignment="Center" Background="Transparent" Foreground="{DynamicResource TextBrush}" HorizontalAlignment="Left" Margin="24,0,0,2">Libraries</TextBlock>
                    <Rectangle Width="16" Height="16" Fill="{DynamicResource TextBrush}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,0,0">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{iconPacks:Material {x:Static iconPacks:PackIconMaterialKind.Puzzle}}"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Grid>
            </ToggleButton>

            <ToggleButton IsChecked="{Binding RibbonActive, Mode=TwoWay}" Margin="0,88,0,0" Height="40" VerticalAlignment="Top" HorizontalAlignment="Stretch" Style="{StaticResource SettingsButtonStyle}">
                <Grid Margin="0,0,0,0">
                    <TextBlock VerticalAlignment="Center" Background="Transparent" Foreground="{DynamicResource TextBrush}" HorizontalAlignment="Left" Margin="24,0,0,2">Macros</TextBlock>
                    <Rectangle Width="16" Height="16" Fill="{DynamicResource TextBrush}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,0,0">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{iconPacks:Material {x:Static iconPacks:PackIconMaterialKind.Script}}"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Grid>
            </ToggleButton>
        </Grid>

        <Rectangle Grid.Column="1" Margin="0,8,0,8" Fill="{StaticResource AccentColorBrush2}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

        <Grid Grid.Column="2" Background="{DynamicResource ControlBackgroundBrush}">
            <!-- TAB CONTENT -->
            <Grid Background="{DynamicResource ControlBackgroundBrush}" Visibility="{Binding StyleActive, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBlock VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="0,4,0,0" TextAlignment="Center">Customize Editor Styling</TextBlock>
                <Rectangle VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="16,23,16,0" Height="1" Fill="{DynamicResource AccentColorBrush2}"/>

                <Grid Margin="16,38,16,0" VerticalAlignment="Top" HorizontalAlignment="Center">
                    <CheckBox VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,0,0,0" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=EditorShowLineNumbers, Mode=TwoWay}">Show Line Numbers</CheckBox>

                    <ComboBox VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,30,0,0" Width="144" Height="28" IsEditable="True" IsTextSearchEnabled="True" IsTextSearchCaseSensitive="True" ItemsSource="{Binding Source={x:Static Fonts.SystemFontFamilies}}" SelectedItem="{Binding Source={x:Static properties:Settings.Default}, Path=EditorFontFamily, Mode=TwoWay}"/>

                    <ComboBox VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,60,0,0" Width="96" Height="28" IsEditable="True" IsTextSearchEnabled="True" IsTextSearchCaseSensitive="True" SelectedItem="{Binding Source={x:Static properties:Settings.Default}, Path=EditorFontWeight, Mode=TwoWay}">
                        <x:Static Member="FontWeights.Bold"/>
                        <x:Static Member="FontWeights.Normal"/>
                        <x:Static Member="FontWeights.Light"/>
                    </ComboBox>

                    <ComboBox VerticalAlignment="Top" HorizontalAlignment="Left" Margin="96,60,0,0" Width="48" Height="28" IsEditable="True" Text="{Binding Source={x:Static properties:Settings.Default}, Path=EditorFontSize, Mode=TwoWay}">
                        <ComboBox.ItemsSource>
                            <x:Array Type="{x:Type System:Double}">
                                <System:Double>8</System:Double>
                                <System:Double>9</System:Double>
                                <System:Double>10</System:Double>
                                <System:Double>11</System:Double>
                                <System:Double>12</System:Double>
                                <System:Double>14</System:Double>
                                <System:Double>16</System:Double>
                                <System:Double>18</System:Double>
                                <System:Double>20</System:Double>
                                <System:Double>22</System:Double>
                                <System:Double>24</System:Double>
                                <System:Double>26</System:Double>
                                <System:Double>28</System:Double>
                                <System:Double>36</System:Double>
                                <System:Double>48</System:Double>
                                <System:Double>72</System:Double>
                            </x:Array>
                        </ComboBox.ItemsSource>
                    </ComboBox>
                </Grid>

                <Rectangle VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="36,138,36,0" Height="1" Fill="{DynamicResource GrayBrush8}"/>

                <Grid Margin="16,148,16,0" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                    <RadioButton Content="Light Theme" IsChecked="{Binding LightTheme, Mode=TwoWay}" Margin="12,4,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    <RadioButton Content="Dark Theme" IsChecked="{Binding DarkTheme, Mode=TwoWay}" Margin="12,4,12,0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                </Grid>
                
                <Grid Margin="16,180,16,0" VerticalAlignment="Top" HorizontalAlignment="Center">
                    <Grid Margin="0,0,0,0" Height="36" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <ext:ColorPicker ButtonStyle="{DynamicResource MCBDDTBStyle}" VerticalAlignment="Center" HorizontalAlignment="Left" Height="24" Width="72" SelectedColor="{Binding FunctionColor}"/>
                        <TextBlock Margin="96,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">Definition Color</TextBlock>
                    </Grid>

                    <Grid Margin="0,36,0,0" Height="36" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <ext:ColorPicker ButtonStyle="{DynamicResource MCBDDTBStyle}" VerticalAlignment="Center" HorizontalAlignment="Left" Height="24" Width="72" SelectedColor="{Binding DigitColor}"/>
                        <TextBlock Margin="96,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">Digit Color</TextBlock>
                    </Grid>

                    <Grid Margin="0,72,0,0" Height="36" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <ext:ColorPicker ButtonStyle="{DynamicResource MCBDDTBStyle}" VerticalAlignment="Center" HorizontalAlignment="Left" Height="24" Width="72" SelectedColor="{Binding CommentColor}"/>
                        <TextBlock Margin="96,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">Comment Color</TextBlock>
                    </Grid>

                    <Grid Margin="0,108,0,0" Height="36" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <ext:ColorPicker ButtonStyle="{DynamicResource MCBDDTBStyle}" VerticalAlignment="Center" HorizontalAlignment="Left" Height="24" Width="72" SelectedColor="{Binding StringColor}"/>
                        <TextBlock Margin="96,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">String Color</TextBlock>
                    </Grid>

                    <Grid Margin="0,144,0,0" Height="36" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <ext:ColorPicker ButtonStyle="{DynamicResource MCBDDTBStyle}" VerticalAlignment="Center" HorizontalAlignment="Left" Height="24" Width="72" SelectedColor="{Binding PairColor}"/>
                        <TextBlock Margin="96,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">Function Color</TextBlock>
                    </Grid>

                    <Grid Margin="0,180,0,0" Height="36" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <ext:ColorPicker ButtonStyle="{DynamicResource MCBDDTBStyle}" VerticalAlignment="Center" HorizontalAlignment="Left" Height="24" Width="72" SelectedColor="{Binding ClassColor}"/>
                        <TextBlock Margin="96,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">Object Color</TextBlock>
                    </Grid>

                    <Grid Margin="0,216,0,0" Height="36" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <ext:ColorPicker ButtonStyle="{DynamicResource MCBDDTBStyle}" VerticalAlignment="Center" HorizontalAlignment="Left" Height="24" Width="72" SelectedColor="{Binding StatementColor}"/>
                        <TextBlock Margin="96,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">Statement Color</TextBlock>
                    </Grid>

                    <Grid Margin="0,252,0,0" Height="36" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <ext:ColorPicker ButtonStyle="{DynamicResource MCBDDTBStyle}" VerticalAlignment="Center" HorizontalAlignment="Left" Height="24" Width="72" SelectedColor="{Binding BooleanColor}"/>
                        <TextBlock Margin="96,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">Boolean Color</TextBlock>
                    </Grid>
                </Grid>
            </Grid>

            <Grid Background="{DynamicResource ControlBackgroundBrush}" Visibility="{Binding LibraryActive, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBlock VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="0,4,0,0" TextAlignment="Center">Manage Modules &amp; Libraries</TextBlock>
                <Rectangle VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="16,23,16,0" Height="1" Fill="{DynamicResource AccentColorBrush2}"/>
                <ListView ItemsSource="{Binding LibraryItems}" SelectedItem="{Binding SelectedLibrary}" BorderThickness="0" Margin="4,30,4,24" Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <ListView.Resources>
                        <DataTemplate DataType="{x:Type viewmodel:DisplayableListViewItem}">
                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Content="{Binding Header}" ToolTip="{Binding ToolTip}" />
                        </DataTemplate>
                    </ListView.Resources>
                </ListView>

                <Button Command="{Binding AddLibraryCommand}" BorderThickness="0" Width="20" Height="20" Margin="0,0,0,0" VerticalAlignment="Bottom" HorizontalAlignment="Left" Background="Transparent">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="ContentGrid" Margin="0,0,0,5" Height="20">
                                <Rectangle x:Name="IconBox" Width="16" Height="16" Fill="#BB010101" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{iconPacks:Material {x:Static iconPacks:PackIconMaterialKind.Plus}}"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="ContentGrid" Property="Background" Value="#44808080" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="ContentGrid" Property="Background" Value="#55808080" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <Button Command="{Binding RemoveLibraryCommand}" BorderThickness="0" Width="20" MaxHeight="20" Margin="28,0,0,0" VerticalAlignment="Bottom" HorizontalAlignment="Left" Background="Transparent">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="ContentGrid" Margin="0,0,0,5">
                                <Rectangle x:Name="IconBox" Width="16" Height="16" Fill="#BB010101" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material {x:Static iconPacks:PackIconMaterialKind.Minus}}"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="ContentGrid" Property="Background" Value="#44808080" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="ContentGrid" Property="Background" Value="#55808080" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                
                <TextBlock Margin="4,30,4,8" Visibility="{Binding LabelVisible, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Stretch" HorizontalAlignment="Center">No Libraries</TextBlock>
            </Grid>

            <Grid Background="{DynamicResource ControlBackgroundBrush}" Visibility="{Binding RibbonActive, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBlock VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="0,4,0,0" TextAlignment="Center">Manage Ribbon Accessible Macros</TextBlock>
                <Rectangle VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="16,23,16,0" Height="1" Fill="{DynamicResource AccentColorBrush2}"/>
                <TreeView ItemsSource="{Binding RibbonItems}" BorderThickness="0" Margin="4,30,4,8" Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Style="{DynamicResource MetroTreeView}">
                    <TreeView.Resources>                        
                        <HierarchicalDataTemplate DataType="{x:Type viewmodel:DisplayableTreeViewItem}" ItemsSource="{Binding Items}">
                            <Grid>
                                <CheckBox IsChecked="{Binding IsRibbonMacro, Mode=TwoWay}" Content="{Binding Header}" ToolTip="{Binding RelativePath}" Visibility="{Binding IsMacro, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <TextBlock Text="{Binding Header}" ToolTip="{Binding RelativePath}" Visibility="{Binding IsFolder, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
                <TextBlock Margin="4,30,4,8" Visibility="{Binding LabelVisible, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Stretch" HorizontalAlignment="Center">No Macros</TextBlock>
            </Grid>
        </Grid>
    </Grid>
</Controls:Flyout>
